name: Android CI (Debug APK, logs no matter what)

permissions:
  contents: write

on:
  push:
    branches: [ "main", "mvp", "feature/**" ]
  pull_request:
    branches: [ "main", "mvp", "feature/**" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare log dir (always)
        run: |
          mkdir -p ci-logs
          echo "run started: $(date -u)" | tee ci-logs/00_run.txt

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android packages
        shell: bash
        run: |
          set -o pipefail
          {
            sdkmanager --install "platform-tools" "platforms;android-31" "build-tools;31.0.0"
            yes | sdkmanager --licenses
          } |& tee -a ci-logs/01_android-sdk.log

      # Use Gradle 7.6 without relying on local wrapper
      - name: Setup Gradle 7.6
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "7.6"

      - name: Sanity check for bad 'module(' usage
        shell: bash
        run: |
          if grep -R "module(" -n .; then
            echo "::error::Found 'module(' in Gradle files. Use \"module: 'name'\" syntax in excludes."
            # continue; logs will show this and final step will fail job
          fi

      - name: Build Debug APK (capture log)
        shell: bash
        continue-on-error: true
        run: |
          set -o pipefail
          gradle :app:assembleDebug --stacktrace |& tee -a ci-logs/04_build.log
          echo "${PIPESTATUS[0]}" > ci-logs/04_build.exit

      # Only upload APK if it actually exists
      - name: Upload Debug APK
        if: ${{ hashFiles('app/build/outputs/apk/debug/app-debug.apk') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: Grimoire-of-Growth-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: warn

      # Always upload logs so you have something to send me
      - name: Upload logs (ALWAYS)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            ci-logs/**
            **/build/reports/**
            **/build/*.log
            **/outputs/logs/**
          if-no-files-found: warn

      # Also push logs into a branch so you can view them in the app
      - name: Push logs to ci-logs branch (ALWAYS)
        if: always()
        shell: bash
        run: |
          RUN_DIR="runs/${{ github.run_id }}"
          git config user.name "CI Logs Bot"
          git config user.email "actions@users.noreply.github.com"
          git fetch origin ci-logs || true
          git checkout -B ci-logs origin/ci-logs || git checkout -B ci-logs
          mkdir -p "$RUN_DIR"
          cp -r ci-logs/* "$RUN_DIR"/
          git add -A
          git commit -m "logs: run ${{ github.run_id }} on ${{ github.ref_name }} @ ${{ github.sha }}" || echo "no changes to commit"
          git push origin ci-logs

      # Fail the job if the build step actually failed
      - name: Finalize result
        if: always()
        shell: bash
        run: |
          code=0
          if [ -f ci-logs/04_build.exit ]; then
            exitcode="$(cat ci-logs/04_build.exit || echo 0)"
            if [ "$exitcode" != "0" ]; then
              echo "::error::Build failed, exit=$exitcode (see ci-logs/04_build.log)"
              code=1
            fi
          fi
          exit $code
