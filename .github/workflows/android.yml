name: Android CI (Debug APK, always logs)

permissions:
  contents: write

on:
  push:
    branches: [ "main", "mvp", "feature/**" ]
  pull_request:
    branches: [ "main", "mvp", "feature/**" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Prepare log dir
        run: |
          mkdir -p ci-logs
          echo "run started: $(date -u)" | tee ci-logs/00_run.txt

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Install SDK + packages via the action itself (less flaky than manual sdkmanager)
      - name: Setup Android SDK + packages
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platform-tools
            platforms;android-31
            build-tools;31.0.0

      - name: Setup Gradle 7.6
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: "7.6"

      - name: Sanity check for bad 'module(' usage
        shell: bash
        run: |
          if grep -R "module(" -n .; then
            echo "::warning::Found 'module(' in Gradle files. Use \"module: 'name'\" in excludes."
          fi

      - name: Build Debug APK (capture log)
        shell: bash
        continue-on-error: true
        run: |
          set -o pipefail
          gradle -v |& tee -a ci-logs/02_gradle-version.log
          gradle :app:assembleDebug --stacktrace |& tee -a ci-logs/04_build.log
          echo "${PIPESTATUS[0]}" > ci-logs/04_build.exit

      - name: Upload Debug APK (if it exists)
        if: ${{ hashFiles('app/build/outputs/apk/debug/app-debug.apk') != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: Grimoire-of-Growth-debug
          path: app/build/outputs/apk/debug/app-debug.apk
          if-no-files-found: warn

      - name: Upload logs (ALWAYS)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: ci-logs/**
          if-no-files-found: warn
          retention-days: 7

      - name: Push logs to ci-logs branch (best effort)
        if: always()
        shell: bash
        continue-on-error: true
        run: |
          RUN_DIR="runs/${{ github.run_id }}"
          git config user.name "CI Logs Bot"
          git config user.email "actions@users.noreply.github.com"
          git fetch origin ci-logs || true
          git checkout -B ci-logs origin/ci-logs || git checkout -B ci-logs
          mkdir -p "$RUN_DIR"
          cp -r ci-logs/* "$RUN_DIR"/
          git add -A
          git commit -m "logs: run ${{ github.run_id }} on ${{ github.ref_name }} @ ${{ github.sha }}" || true
          git push origin ci-logs || true

      - name: Fail if build failed
        if: always()
        shell: bash
        run: |
          if [ -f ci-logs/04_build.exit ] && [ "$(cat ci-logs/04_build.exit)" != "0" ]; then
            echo "::error::Build failed (see build-logs artifact or ci-logs branch)"
            exit 1
          fi
